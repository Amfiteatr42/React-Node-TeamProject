{"version":3,"file":"static/js/74.f9ddce42.chunk.js","mappings":"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","sources":["components/FriendsCard/Friends.styled.js","components/FriendsCard/Friends.jsx","pages/OurFriendsPage/OurFriendsPage.styled.js","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { GoLocation } from 'react-icons/go';\n\nexport const Container = styled.div`\n  margin-top: 12px;\n  width: 280px;\n  margin-left: auto;\n  margin-right: auto;\n  background: #ffffff;\n  border-radius: 20px;\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  @media screen and (min-width: 767px) {\n    width: 335px;\n    margin-top: 0px;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: flex-start;\n  }\n  @media screen and (min-width: 1279px) {\n    width: 392px;\n  }\n`;\n\nexport const Title = styled.a`\n  padding-top: 14px;\n  display: block;\n  font-size: 12px;\n  line-height: 1.38;\n  text-align: center;\n  text-decoration-line: underline;\n  color: #f59256;\n  overflow-wrap: break-word;\n  transition: color var(--transition);\n\n  &:hover {\n    color: var(--black-3);\n  }\n\n  @media screen and (min-width: 767px) {\n    padding-top: 0px;\n    margin-top: 16px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: 1279px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1279px) {\n  }\n`;\n\nexport const WrapperIMG = styled.div`\n  flex-grow: 0;\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1279px) {\n  }\n`;\n\nexport const WrapperContent = styled.div`\n  flex-grow: 1;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.38;\n  color: #111111;\n  width: 150px;\n  overflow-wrap: break-word;\n  @media screen and (min-width: 767px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1279px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  width: 110px;\n  height: 78px;\n  margin-top: 40px;\n  margin-left: 4px;\n  margin-right: 12px;\n  @media screen and (min-width: 767px) {\n    margin-top: 54px;\n    margin-left: 4px;\n    margin-right: 14px;\n    width: 120px;\n    height: 85px;\n  }\n  @media screen and (min-width: 1279px) {\n    width: 158px;\n    height: 112px;\n    margin-top: 59px;\n    margin-left: 4px;\n    margin-right: 16px;\n  }\n`;\n\nexport const WrapperTimeHover = styled.div`\n  display: none;\n  position: absolute;\n  top: 20px;\n  left: 0;\n`;\nexport const SpanWeek = styled.span`\n  display: inline-block;\n  width: 19px;\n  margin-right: 12px;\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1279px) {\n  }\n`;\nexport const ListFullTime = styled.ul`\n  background: #ffffff;\n  border: 1px solid #f59256;\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  padding: 12px;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.38;\n  text-align: center;\n  color: #000000;\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1279px) {\n  }\n`;\n\nexport const ItemTime = styled.li`\n  margin-top: 4px;\n  &:nth-child(1) {\n    margin-top: 0px;\n  }\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1279px) {\n  }\n`;\n\nexport const Data = styled.div`\n  position: relative;\n\n  @media screen and (min-width: 767px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1279px) {\n    font-size: 16px;\n  }\n`;\n\nexport const DataBox = styled.div`\n  transition: color var(--transition);\n  &:hover {\n    color: #f59256;\n    cursor: pointer;\n    .time-wrapper {\n      display: ${props => (!!props.newWorkDays ? 'block' : 'none')};\n    }\n  }\n`;\n\nexport const P = styled.p`\n  margin-top: 4px;\n  &:nth-child(1) {\n    margin-top: 12px;\n  }\n  @media screen and (min-width: 767px) {\n    font-size: 14px;\n    margin-top: 8px;\n    &:nth-child(1) {\n      margin-top: 16px;\n    }\n  }\n  @media screen and (min-width: 1279px) {\n    font-size: 16px;\n    margin-top: 12px;\n    &:nth-child(1) {\n      margin-top: 16px;\n    }\n  }\n  ${DataBox}:hover & {\n    color: #f59256;\n  }\n`;\n\nexport const Address = styled.a`\n  display: inline-block;\n  overflow-wrap: anywhere;\n  font-weight: 500;\n  font-size: 12px;\n  /* text-decoration-line: underline; */\n  line-height: 1.38;\n  color: #111111;\n  :hover {\n    color: #ff6101;\n  }\n  @media screen and (min-width: 767px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1279px) {\n    font-size: 16px;\n  }\n`;\n\nexport const IconAddress = styled(GoLocation)`\n  fill: #f59256;\n  margin-left: 10px;\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1279px) {\n  }\n`;\n\nexport const Email = styled.a`\n  display: inline-block;\n  overflow-wrap: anywhere;\n  font-weight: 500;\n  font-size: 12px;\n  /* text-decoration-line: underline; */\n  line-height: 1.38;\n  color: #111111;\n  :hover {\n    color: #ff6101;\n  }\n  @media screen and (min-width: 767px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1279px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Phone = styled.a`\n  display: inline-block;\n  overflow-wrap: anywhere;\n  font-weight: 500;\n  font-size: 12px;\n  /* text-decoration-line: underline; */\n  line-height: 1.38;\n  color: #111111;\n  margin-bottom: 12px;\n  :hover {\n    color: #ff6101;\n  }\n  @media screen and (min-width: 767px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1279px) {\n    font-size: 16px;\n  }\n`;\n","import {\n  Wrapper,\n  Container,\n  Img,\n  Title,\n  WrapperIMG,\n  WrapperContent,\n  Data,\n  Address,\n  Email,\n  Phone,\n  IconAddress,\n  WrapperTimeHover,\n  ListFullTime,\n  SpanWeek,\n  ItemTime,\n  P,\n  DataBox,\n} from './Friends.styled';\n\nconst Friends = ({ friends }) => {\n  const {\n    name,\n    adress,\n    adressUrl,\n    email,\n    logo,\n    phone,\n    friendUrl,\n    workingHours,\n  } = friends;\n\n  const buttonAddress = () => {\n    if (!adressUrl) {\n      return '';\n    }\n    return (\n      <a href={adressUrl} target=\"_blank\" rel=\"noreferrer\">\n        <IconAddress />\n      </a>\n    );\n  };\n  const week = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n  const newWorkDays = workingHours?.map((item, i) => {\n    return { ...item, week: week[i] };\n  });\n\n  const fullTime = arr => {\n    if (!arr.length) {\n      arr = week;\n      week.map((item, index) => {\n        return (\n          <ItemTime key={index}>\n            <SpanWeek>{item}</SpanWeek>\n            -------------\n          </ItemTime>\n        );\n      });\n    }\n    const result = arr?.map((item, index) => {\n      if (item.week) {\n        if (item.isOpen) {\n          return (\n            <ItemTime key={index}>\n              <SpanWeek>{item.week}</SpanWeek>\n              -------------\n            </ItemTime>\n          );\n        }\n        if (!item.isOpen) {\n          return (\n            <ItemTime key={index}>\n              <SpanWeek>{item.week}</SpanWeek>\n              {item.from}- {item.to}\n            </ItemTime>\n          );\n        }\n      }\n      return (\n        <ItemTime key={index}>\n          <SpanWeek>{item}</SpanWeek>\n          -------------\n        </ItemTime>\n      );\n    });\n\n    return result;\n  };\n\n  const timeOne = arr => {\n    // const result = arr?.find(item => item.isOpen);\n\n    return true ? (\n      <p>\n        {arr[0]?.from}- {arr[0]?.to}\n      </p>\n    ) : (\n      '-----------------------'\n    );\n  };\n\n  return (\n    <Container>\n      <Title href={friendUrl} target=\"_blank\">\n        {name}\n      </Title>\n      <Wrapper>\n        <WrapperIMG>\n          <Img src={logo}></Img>\n        </WrapperIMG>\n        <WrapperContent>\n          <DataBox newWorkDays={newWorkDays}>\n            <P> Time:</P>\n            <Data>\n              {newWorkDays ? timeOne(newWorkDays) : '-----------------------'}\n              <WrapperTimeHover className=\"time-wrapper\">\n                <ListFullTime>\n                  {fullTime(newWorkDays ? newWorkDays : week)}\n                </ListFullTime>\n              </WrapperTimeHover>\n            </Data>\n          </DataBox>\n\n          <P> Adress:{buttonAddress()} </P>\n          <Address href={adressUrl} target=\"_blank\">\n            {adress || '-----------------------'}\n          </Address>\n          <P> Email:</P>\n          <Email href={email ? 'mailto:' + email : null}>\n            {email || '-----------------------'}\n          </Email>\n          <P>Phone:</P>\n          <Phone href={phone ? 'tel:' + phone : null}>\n            {phone || '-----------------------'}\n          </Phone>\n        </WrapperContent>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Friends;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: #fdf7f2;\n  /* width: 320 px; */\n  padding-bottom: 100px;\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1279px) {\n    padding-bottom: 200px;\n  }\n`;\nexport const WrapperList = styled.div`\n  width: 280px;\n  margin-right: auto;\n  margin-left: auto;\n  @media screen and (min-width: 767px) {\n    width: 702px;\n  }\n  @media screen and (min-width: 1279px) {\n    width: 1240px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  line-height: 1.38;\n  text-align: center;\n  margin-top: 42px;\n  margin-bottom: 28px;\n  @media screen and (min-width: 767px) {\n    font-size: 48px;\n    margin-top: 90px;\n    margin-bottom: 40px;\n  }\n  @media screen and (min-width: 1279px) {\n    margin-top: 60px;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const ListCard = styled.ul`\n  list-style: none;\n  padding: 0px;\n  margin: 0px;\n\n  @media screen and (min-width: 767px) {\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    row-gap: 32px;\n    column-gap: 32px;\n  }\n  @media screen and (min-width: 1279px) {\n  }\n`;\n\nexport const ItemCard = styled.li`\n  @media screen and (min-width: 767px) {\n    flex-basis: calc((100%-40px-32px) / 3);\n  }\n  @media screen and (min-width: 1279px) {\n    flex-basis: calc((100%-40px-32px-32px) / 4);\n  }\n`;\n","import Friends from 'components/FriendsCard/Friends';\nimport {\n  ItemCard,\n  ListCard,\n  Title,\n  Wrapper,\n  WrapperList,\n} from './OurFriendsPage.styled';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api-petly.onrender.com/api/';\n\n\nconst OurFriendsPage = () => {\nconst [friends, setFriends] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const { data } = await axios.get('/friends');\n      console.log(data.data);\n      setFriends(data.data);   \n  }\n  fetchData();\n}, []);\n\n  return (\n    friends && (\n      <Wrapper>\n        <Title>Our friends</Title>\n        <WrapperList>\n          <ListCard>\n            {friends.map(value => (\n              <ItemCard key={value?._id}>\n                <Friends friends={value} />\n              </ItemCard>\n            ))}\n          </ListCard>\n        </WrapperList>\n      </Wrapper>\n    )\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["Container","styled","Title","Wrapper","WrapperIMG","WrapperContent","Img","WrapperTimeHover","SpanWeek","ListFullTime","ItemTime","Data","DataBox","props","newWorkDays","P","Address","IconAddress","GoLocation","Email","Phone","friends","name","adress","adressUrl","email","logo","phone","friendUrl","workingHours","week","map","item","i","href","target","src","arr","from","to","timeOne","className","length","index","isOpen","fullTime","rel","WrapperList","ListCard","ItemCard","axios","useState","setFriends","useEffect","data","console","log","fetchData","value","_id"],"sourceRoot":""}